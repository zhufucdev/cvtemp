name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install rust
      - name: Install rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      # Pull opencv source, unzip, configure cmake, build, and install
      # Disable image formats like jpeg, png, tiff, as we use rust image crate instead.  See https://docs.opencv.org/4.x/db/d05/tutorial_config_reference.html
      # Inspired from https://github.com/twistedfall/opencv-rust/issues/364
      - name: Install OpenCV static lib
        run: |
          wget -O opencv.zip https://github.com/opencv/opencv/archive/refs/tags/4.9.0.zip
          wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/refs/tags/4.9.0.zip
          unzip opencv.zip && rm opencv.zip
          unzip opencv_contrib.zip && rm opencv_contrib.zip
          mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=NO -DCMAKE_INSTALL_PREFIX=/opt/opencv -DBUILD_DOCS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DWITH_PNG=OFF -DWITH_JPEG=OFF -DWITH_TIFF=OFF -DWITH_WEBP=OFF -DWITH_OPENJPEG=OFF -DWITH_JASPER=OFF -DWITH_OPENEXR=OFF -DWITH_V4L=OFF  -DBUILD_opencv_java=OFF -DBUILD_opencv_python=OFF -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-4.8.1/modules ../opencv-4.8.1
          cmake --build . --target install --config Release --parallel 8
          cmake --install . --prefix /opt/opencv
          cd ..

      # Note: OPENCV_LINK_LIBS ordering matters for linux.  Put lower level deps after higher level.  See https://answers.opencv.org/question/186124/undefined-reference-to-cvsoftdoubleoperator/
      # libclang files are in /usr/lib/llvm-##/lib.  We symlink it to one of the opencv_link_paths
      # OpenCV-rust looks for "opencv2/core/version.hpp" for the OpenCV version: https://github.com/twistedfall/opencv-rust/issues/368
      #  which is under /<install-prefix>/include/opencv4 for linux
      # Build
      - name: Build
        run: |
          export OPENCV_LINK_LIBS="opencv_videoio,opencv_imgcodecs,opencv_imgproc,opencv_core,libippiw,libittnotify,libippicv,z"
          export OPENCV_LINK_PATHS=/opt/opencv/lib,/opt/opencv/lib/opencv4/3rdparty,/usr/lib/x86_64-linux-gnu
          export OPENCV_INCLUDE_PATHS=/opt/opencv/include,/opt/opencv/include/opencv4
          sudo ln -s /usr/lib/llvm-15/lib/libclang.so.1 /usr/lib/x86_64-linux-gnu/libclang.so
          ls -R /opt/opencv
          ls -R /usr/lib
          cargo build --release
  build_windows:
    runs-on: windows-latest
    env:
      OPENCV_INCLUDE_PATHS: C:\tools\opencv\build\include
      OPENCV_LINK_LIBS: opencv_world490
      OPENCV_LINK_PATHS: C:\tools\opencv\build\x64\vc16\lib
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install llvm opencv --no-progress
      - name: Build
        run: cargo build --release --verbose
        shell: bash
      - name: Copy dynamic links
        run: cp C:/tools/opencv/build/x64/vc16/bin/*.dll target/release
        shell: bash
      - name: Collect
        uses: actions/upload-artifact@v4
        with:
          name: cvtemp-windows-x64
          path: |
            target/release/cvtemp.exe
            target/release/*.dll
